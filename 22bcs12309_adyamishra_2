class TicketBookingSystem {
    private int availableSeats;

    public TicketBookingSystem(int seats) {
        this.availableSeats = seats;
    }

    public synchronized boolean bookSeat(String user) {
        if (availableSeats > 0) {
            System.out.println(user + " successfully booked a seat.");
            availableSeats--;
            return true;
        } else {
            System.out.println(user + " tried to book, but no seats available.");
            return false;
        }
    }
}

class BookingThread extends Thread {
    private TicketBookingSystem system;
    private String user;

    public BookingThread(TicketBookingSystem system, String user, int priority) {
        this.system = system;
        this.user = user;
        setPriority(priority);
    }

    public void run() {
        system.bookSeat(user);
    }
}

public class TicketBooking {
    public static void main(String[] args) {
        TicketBookingSystem system = new TicketBookingSystem(5);

        Thread vip1 = new BookingThread(system, "VIP1", Thread.MAX_PRIORITY);
        Thread vip2 = new BookingThread(system, "VIP2", Thread.MAX_PRIORITY);
        Thread user1 = new BookingThread(system, "User1", Thread.NORM_PRIORITY);
        Thread user2 = new BookingThread(system, "User2", Thread.NORM_PRIORITY);
        Thread user3 = new BookingThread(system, "User3", Thread.MIN_PRIORITY);

        vip1.start();
        vip2.start();
        user1.start();
        user2.start();
        user3.start();
    }
}
